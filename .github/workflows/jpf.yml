name: Run JPF

on:
  push:

jobs:
  run-asan:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: 59cabc10a214ae635e6e38dfd36f6c5df2323152
        submodules: 'recursive'
  
    - name: Set up JDK 17 for project
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build project with JDK 17
      run: ./mvnw clean package -Dmaven.test.skip

    - name: Unzip source directory 
      shell: bash
      run: |
        #!/bin/bash
        dist_directory=$(pwd)/dist
        if [ -d "$dist_directory" ]; then
          find "$dist_directory" -type f -name "*.tar.gz" -print0 | while IFS= read -r -d '' file; do
            echo "Extracting $file"
            tar -xzf "$file" -C "$(dirname "$file")"
          done
        else
          echo "$dist_directory does not exist."
          exit 1
        fi
      
    - name: Set up JDK 11 for JPF
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Clone and build jpf-core
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core
        ./gradlew buildJars

    - name: Run JPF on JAR files
      shell: bash
      run: |
        #!/bin/bash
        set +e 
        
        directory=$(pwd)
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"
        jar_files=$(find "$directory" -type f -name "*.jar")
        
        for jar_file in $jar_files; do
            if ! unzip -l "$jar_file" 2>/dev/null | grep -q "META-INF/MANIFEST.MF"; then
                continue
            fi
            
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')
            
            if [ -z "$main_class" ]; then
                continue
            fi
            
            command="java -jar $runjpf_jar +classpath=$jar_file $main_class"
            $command
        done
